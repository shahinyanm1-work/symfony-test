services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: orders_app
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    ports:
      - "${APP_PORT:-8080}:80"
    depends_on:
      - db
      - redis
      - manticore
    environment:
      - APP_ENV=${APP_ENV:-dev}
      - DATABASE_URL=mysql://root:${DB_PASSWORD:-password}@db:3306/${DB_NAME:-orders_db}
      - REDIS_URL=redis://redis:6379
      - MANTICORE_HOST=manticore
      - MANTICORE_PORT=9308
    networks:
      - orders_network

  nginx:
    image: nginx:alpine
    container_name: orders_nginx
    ports:
      - "${APP_PORT:-8080}:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - orders_network

  db:
    image: mysql:8.0
    container_name: orders_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_NAME:-orders_db}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-password}
      MYSQL_USER: ${DB_USER:-orders_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-password}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./db/dump:/docker-entrypoint-initdb.d
    networks:
      - orders_network

  redis:
    image: redis:alpine
    container_name: orders_redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - orders_network

  manticore:
    image: manticoresearch/manticore:latest
    container_name: orders_manticore
    ports:
      - "${MANTICORE_PORT:-9308}:9308"
      - "${MANTICORE_HTTP_PORT:-9306}:9306"
    volumes:
      - manticore_data:/var/lib/manticore
      - ./docker/manticore/manticore.conf:/etc/manticoresearch/manticore.conf
    networks:
      - orders_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: orders_phpmyadmin
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${DB_PASSWORD:-password}
    ports:
      - "${PHPMYADMIN_PORT:-8081}:80"
    depends_on:
      - db
    networks:
      - orders_network

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  db_data:
  redis_data:

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
  manticore_data:

networks:
  orders_network:
    driver: bridge
